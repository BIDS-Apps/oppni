---
version: 2.1

jobs:
  build:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - checkout
      - restore_cache:
          keys:
            - my_cache
      - run:
          name: Get test data ds114_test1
          command: |
            wget https://raw.githubusercontent.com/bids-apps/maintenance-tools/main/utils/get_data_from_osf.sh
            bash get_ds114_test1.sh
      - run:
          name: Get test data ds114_test2
          command: |
            wget https://raw.githubusercontent.com/bids-apps/maintenance-tools/main/utils/get_data_from_osf.sh
            bash get_ds114_test2.sh
      - run:
          name: Build Docker image
          command: |
            wget https://raw.githubusercontent.com/bids-apps/maintenance-tools/main/circleci/build_docker.sh
            bash build_docker.sh
      - save_cache:
          key: my_cache
          paths:
            - ~/docker
            - ~/data
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - data/ds114_test1
            - data/ds114_test2
            - docker/image.tar

  test:
    machine:
      image: ubuntu-2204:2022.10.2

    parameters:
      dataset:
        type: string

    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          command: |
            docker load -i /tmp/workspace/docker/image.tar

      - run: mkdir -p ${HOME}/outputs<< parameters.dataset >>

      - run:
          name: print version
          command: |
            docker run -ti --rm --read-only \
              -v /tmp:/tmp \
              -v /var/tmp:/var/tmp \
              -v /tmp/workspace/data/ds114_test<< parameters.dataset >>:/bids_dataset \
              -v ${HOME}/outputs<< parameters.dataset >>:/outputs \
                bids/${CIRCLE_PROJECT_REPONAME,,} --version
          no_output_timeout: 6h
      - run:
          name: participant_label 01
          command: |
            docker run -ti --rm --read-only \
              -v /tmp:/tmp \
              -v /var/tmp:/var/tmp \
              -v /tmp/workspace/data/ds114_test<< parameters.dataset >>:/bids_dataset \
              -v ${HOME}/outputs<< parameters.dataset >>:/outputs \
                bids/${CIRCLE_PROJECT_REPONAME,,} /bids_dataset /outputs participant --participant_label 01 --task_name linebisection
          no_output_timeout: 6h
      - run:
          name: participant_label 02
          command: |
            docker run -ti --rm --read-only \
              -v /tmp:/tmp \
              -v /var/tmp:/var/tmp \
              -v /tmp/workspace/data/ds114_test<< parameters.dataset >>:/bids_dataset \
              -v ${HOME}/outputs<< parameters.dataset >>:/outputs \
                bids/${CIRCLE_PROJECT_REPONAME,,} /bids_dataset /outputs participant --participant_label 02 --task_name linebisection
          no_output_timeout: 6h
      - run:
          name: group level
          command: |
            docker run -ti --rm --read-only \
              -v /tmp:/tmp \
              -v /var/tmp:/var/tmp \
              -v /tmp/workspace/data/ds114_test<< parameters.dataset >>:/bids_dataset \
              -v ${HOME}/outputs<< parameters.dataset >>:/outputs \
                bids/${CIRCLE_PROJECT_REPONAME,,} /bids_dataset /outputs group --task_name linebisection
          no_output_timeout: 6h

      - store_artifacts:
          path: ~/output<< parameters.dataset >>

  deploy:
    machine:
      image: ubuntu-2204:2022.10.2
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: docker load -i /tmp/workspace/image.tar
      - run:
          name: push to dockerhub
          command: |
            wget https://raw.githubusercontent.com/bids-apps/maintenance-tools/main/circleci/push_docker.sh
            bash push_docker.sh

workflows:
  build-test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
          matrix:
            parameters:
              dataset: ["01", "02"]
      - deploy:
          requires:
            - test
          filters:
            tags:
              only: /.*/
